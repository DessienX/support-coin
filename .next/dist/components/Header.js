"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require("semantic-ui-react");

var _routes = require("../routes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = "C:\\xampp\\htdocs\\blockchain\\support-me\\components\\Header.js";

exports.default = function () {
  return _react2.default.createElement(_semanticUiReact.Menu, { style: { marginTop: "10px", marginBottom: "40px" }, __source: {
      fileName: _jsxFileName,
      lineNumber: 7
    }
  }, _react2.default.createElement(_routes.Link, { route: "/", __source: {
      fileName: _jsxFileName,
      lineNumber: 8
    }
  }, _react2.default.createElement("a", { className: "item", __source: {
      fileName: _jsxFileName,
      lineNumber: 9
    }
  }, "CrowdCoin")), _react2.default.createElement(_semanticUiReact.Menu.Menu, { position: "right", __source: {
      fileName: _jsxFileName,
      lineNumber: 12
    }
  }, _react2.default.createElement(_routes.Link, { route: "/", __source: {
      fileName: _jsxFileName,
      lineNumber: 13
    }
  }, _react2.default.createElement("a", { className: "item", __source: {
      fileName: _jsxFileName,
      lineNumber: 14
    }
  }, "Campaigns")), _react2.default.createElement(_routes.Link, { route: "/campaigns/new", __source: {
      fileName: _jsxFileName,
      lineNumber: 17
    }
  }, _react2.default.createElement("a", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 18
    }
  }, _react2.default.createElement(_semanticUiReact.Button, {
    content: "Create Campaign",
    icon: "add circle",
    primary: true,
    style: { marginTop: "5px", marginBottom: "5px" },
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19
    }
  })))));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9tIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyb3V0ZSIsImNsYXNzTmFtZSIsIk1lbnUiLCJwb3NpdGlvbiIsImNvbnRlbnQiLCJpY29uIiwicHJpbWFyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7OztBQUhBLElBQUlBLGVBQWUsa0VBQW5COztrQkFLZ0IsWUFBWTtBQUMxQixTQUFPLGdCQUFNQyxhQUFOLHdCQUVMLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxNQUFiLEVBQXFCQyxjQUFjLE1BQW5DLEVBQVQsRUFBc0RDLFVBQVU7QUFDNURDLGdCQUFVTixZQURrRDtBQUU1RE8sa0JBQVk7QUFGZ0Q7QUFBaEUsR0FGSyxFQU9MLGdCQUFNTixhQUFOLGVBRUUsRUFBRU8sT0FBTyxHQUFULEVBQWNILFVBQVU7QUFDcEJDLGdCQUFVTixZQURVO0FBRXBCTyxrQkFBWTtBQUZRO0FBQXhCLEdBRkYsRUFPRSxnQkFBTU4sYUFBTixDQUNFLEdBREYsRUFFRSxFQUFFUSxXQUFXLE1BQWIsRUFBcUJKLFVBQVU7QUFDM0JDLGdCQUFVTixZQURpQjtBQUUzQk8sa0JBQVk7QUFGZTtBQUEvQixHQUZGLEVBT0UsV0FQRixDQVBGLENBUEssRUF3QkwsZ0JBQU1OLGFBQU4sQ0FDRSxzQkFBS1MsSUFEUCxFQUVFLEVBQUVDLFVBQVUsT0FBWixFQUFxQk4sVUFBVTtBQUMzQkMsZ0JBQVVOLFlBRGlCO0FBRTNCTyxrQkFBWTtBQUZlO0FBQS9CLEdBRkYsRUFPRSxnQkFBTU4sYUFBTixlQUVFLEVBQUVPLE9BQU8sR0FBVCxFQUFjSCxVQUFVO0FBQ3BCQyxnQkFBVU4sWUFEVTtBQUVwQk8sa0JBQVk7QUFGUTtBQUF4QixHQUZGLEVBT0UsZ0JBQU1OLGFBQU4sQ0FDRSxHQURGLEVBRUUsRUFBRVEsV0FBVyxNQUFiLEVBQXFCSixVQUFVO0FBQzNCQyxnQkFBVU4sWUFEaUI7QUFFM0JPLGtCQUFZO0FBRmU7QUFBL0IsR0FGRixFQU9FLFdBUEYsQ0FQRixDQVBGLEVBd0JFLGdCQUFNTixhQUFOLGVBRUUsRUFBRU8sT0FBTyxnQkFBVCxFQUEyQkgsVUFBVTtBQUNqQ0MsZ0JBQVVOLFlBRHVCO0FBRWpDTyxrQkFBWTtBQUZxQjtBQUFyQyxHQUZGLEVBT0UsZ0JBQU1OLGFBQU4sQ0FDRSxHQURGLEVBRUU7QUFDRUksY0FBVTtBQUNSQyxnQkFBVU4sWUFERjtBQUVSTyxrQkFBWTtBQUZKO0FBRFosR0FGRixFQVFFLGdCQUFNTixhQUFOLDBCQUE0QjtBQUMxQlcsYUFBUyxpQkFEaUI7QUFFMUJDLFVBQU0sWUFGb0I7QUFHMUJDLGFBQVMsSUFIaUI7QUFJMUJaLFdBQU8sRUFBRUMsV0FBVyxLQUFiLEVBQW9CQyxjQUFjLEtBQWxDLEVBSm1CO0FBSzFCQyxjQUFVO0FBQ1JDLGdCQUFVTixZQURGO0FBRVJPLGtCQUFZO0FBRko7QUFMZ0IsR0FBNUIsQ0FSRixDQVBGLENBeEJGLENBeEJLLENBQVA7QUE2RUQsQyIsImZpbGUiOiJ1bmtub3duIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9qc3hGaWxlTmFtZSA9IFwiQzpcXFxceGFtcHBcXFxcaHRkb2NzXFxcXGJsb2NrY2hhaW5cXFxcc3VwcG9ydC1tZVxcXFxjb21wb25lbnRzXFxcXEhlYWRlci5qc1wiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTWVudSwgQnV0dG9uIH0gZnJvbSBcInNlbWFudGljLXVpLXJlYWN0XCI7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcIi4uL3JvdXRlc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBNZW51LFxuICAgIHsgc3R5bGU6IHsgbWFyZ2luVG9wOiBcIjEwcHhcIiwgbWFyZ2luQm90dG9tOiBcIjQwcHhcIiB9LCBfX3NvdXJjZToge1xuICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICBsaW5lTnVtYmVyOiA3XG4gICAgICB9XG4gICAgfSxcbiAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgTGluayxcbiAgICAgIHsgcm91dGU6IFwiL1wiLCBfX3NvdXJjZToge1xuICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgbGluZU51bWJlcjogOFxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJhXCIsXG4gICAgICAgIHsgY2xhc3NOYW1lOiBcIml0ZW1cIiwgX19zb3VyY2U6IHtcbiAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICBsaW5lTnVtYmVyOiA5XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcIkNyb3dkQ29pblwiXG4gICAgICApXG4gICAgKSxcbiAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgTWVudS5NZW51LFxuICAgICAgeyBwb3NpdGlvbjogXCJyaWdodFwiLCBfX3NvdXJjZToge1xuICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgbGluZU51bWJlcjogMTJcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIExpbmssXG4gICAgICAgIHsgcm91dGU6IFwiL1wiLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgIGxpbmVOdW1iZXI6IDEzXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIFwiYVwiLFxuICAgICAgICAgIHsgY2xhc3NOYW1lOiBcIml0ZW1cIiwgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgbGluZU51bWJlcjogMTRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiQ2FtcGFpZ25zXCJcbiAgICAgICAgKVxuICAgICAgKSxcbiAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIExpbmssXG4gICAgICAgIHsgcm91dGU6IFwiL2NhbXBhaWducy9uZXdcIiwgX19zb3VyY2U6IHtcbiAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICBsaW5lTnVtYmVyOiAxN1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICBcImFcIixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxOFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiQ3JlYXRlIENhbXBhaWduXCIsXG4gICAgICAgICAgICBpY29uOiBcImFkZCBjaXJjbGVcIixcbiAgICAgICAgICAgIHByaW1hcnk6IHRydWUsXG4gICAgICAgICAgICBzdHlsZTogeyBtYXJnaW5Ub3A6IFwiNXB4XCIsIG1hcmdpbkJvdHRvbTogXCI1cHhcIiB9LFxuICAgICAgICAgICAgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgbGluZU51bWJlcjogMTlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICApXG4gICAgKVxuICApO1xufSk7Il19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9tIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyb3V0ZSIsImNsYXNzTmFtZSIsIk1lbnUiLCJwb3NpdGlvbiIsImNvbnRlbnQiLCJpY29uIiwicHJpbWFyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7OztBQUhBLElBQUlBLGVBQWUsa0VBQW5COztrQkFLZ0IsWUFBWTtBQUMxQixTQUFPLGdCQUFNQyxhQUFOLHdCQUVMLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxNQUFiLEVBQXFCQyxjQUFjLE1BQW5DLEVBQVQsRUFBc0RDLFVBQVU7QUFDNURDLGdCQUFVTixZQURrRDtBQUU1RE8sa0JBQVk7QUFGZ0Q7QUFBaEUsR0FGSyxFQU9MLGdCQUFNTixhQUFOLGVBRUUsRUFBRU8sT0FBTyxHQUFULEVBQWNILFVBQVU7QUFDcEJDLGdCQUFVTixZQURVO0FBRXBCTyxrQkFBWTtBQUZRO0FBQXhCLEdBRkYsRUFPRSxnQkFBTU4sYUFBTixDQUNFLEdBREYsRUFFRSxFQUFFUSxXQUFXLE1BQWIsRUFBcUJKLFVBQVU7QUFDM0JDLGdCQUFVTixZQURpQjtBQUUzQk8sa0JBQVk7QUFGZTtBQUEvQixHQUZGLEVBT0UsV0FQRixDQVBGLENBUEssRUF3QkwsZ0JBQU1OLGFBQU4sQ0FDRSxzQkFBS1MsSUFEUCxFQUVFLEVBQUVDLFVBQVUsT0FBWixFQUFxQk4sVUFBVTtBQUMzQkMsZ0JBQVVOLFlBRGlCO0FBRTNCTyxrQkFBWTtBQUZlO0FBQS9CLEdBRkYsRUFPRSxnQkFBTU4sYUFBTixlQUVFLEVBQUVPLE9BQU8sR0FBVCxFQUFjSCxVQUFVO0FBQ3BCQyxnQkFBVU4sWUFEVTtBQUVwQk8sa0JBQVk7QUFGUTtBQUF4QixHQUZGLEVBT0UsZ0JBQU1OLGFBQU4sQ0FDRSxHQURGLEVBRUUsRUFBRVEsV0FBVyxNQUFiLEVBQXFCSixVQUFVO0FBQzNCQyxnQkFBVU4sWUFEaUI7QUFFM0JPLGtCQUFZO0FBRmU7QUFBL0IsR0FGRixFQU9FLFdBUEYsQ0FQRixDQVBGLEVBd0JFLGdCQUFNTixhQUFOLGVBRUUsRUFBRU8sT0FBTyxnQkFBVCxFQUEyQkgsVUFBVTtBQUNqQ0MsZ0JBQVVOLFlBRHVCO0FBRWpDTyxrQkFBWTtBQUZxQjtBQUFyQyxHQUZGLEVBT0UsZ0JBQU1OLGFBQU4sQ0FDRSxHQURGLEVBRUU7QUFDRUksY0FBVTtBQUNSQyxnQkFBVU4sWUFERjtBQUVSTyxrQkFBWTtBQUZKO0FBRFosR0FGRixFQVFFLGdCQUFNTixhQUFOLDBCQUE0QjtBQUMxQlcsYUFBUyxpQkFEaUI7QUFFMUJDLFVBQU0sWUFGb0I7QUFHMUJDLGFBQVMsSUFIaUI7QUFJMUJaLFdBQU8sRUFBRUMsV0FBVyxLQUFiLEVBQW9CQyxjQUFjLEtBQWxDLEVBSm1CO0FBSzFCQyxjQUFVO0FBQ1JDLGdCQUFVTixZQURGO0FBRVJPLGtCQUFZO0FBRko7QUFMZ0IsR0FBNUIsQ0FSRixDQVBGLENBeEJGLENBeEJLLENBQVA7QUE2RUQsQyIsImZpbGUiOiJ1bmtub3duIn0=